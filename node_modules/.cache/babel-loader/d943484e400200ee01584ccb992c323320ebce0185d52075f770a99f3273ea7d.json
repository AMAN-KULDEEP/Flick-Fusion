{"ast":null,"code":"var _jsxFileName = \"/Users/amankuldeep/Documents/Video-Streaming-web-application/src/components/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Stack, Box, Typography } from '@mui/material';\nimport { SideBar, Videos } from './';\nimport { fetchFromAPI } from '../utils/fetchFromAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('New');\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetchFromAPI(`search?part=snippet&q=${selectedCategory}`).then(data => setVideos(data.items));\n  }, [selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      flexDirection: {\n        sx: 'column',\n        md: 'row'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      selectedCategory: selectedCategory,\n      setSelectedCategory: setSelectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      sx: {\n        overflowY: 'auto',\n        height: '90vh',\n        flex: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        mb: 2,\n        sx: {\n          color: 'white'\n        },\n        children: [selectedCategory, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#F31503'\n          },\n          children: \"videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Videos, {\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"iaa2zkbU0H6jwlA8Tm/aGVmEITo=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","useEffect","Stack","Box","Typography","SideBar","Videos","fetchFromAPI","Feed","selectedCategory","setSelectedCategory","videos","setVideos","then","data","items","flexDirection","sx","md","overflowY","height","flex","color"],"sources":["/Users/amankuldeep/Documents/Video-Streaming-web-application/src/components/Feed.jsx"],"sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {Stack, Box, Typography} from '@mui/material';\nimport {SideBar, Videos} from './';\nimport {fetchFromAPI} from '../utils/fetchFromAPI';\n\n\nconst Feed = () => {\n  const [selectedCategory,setSelectedCategory] = useState('New');\n  const [videos,setVideos] = useState([]);\n  useEffect(()=>{\n    fetchFromAPI(`search?part=snippet&q=${selectedCategory}`)\n      .then((data) => setVideos(data.items));\n  },[selectedCategory]);\n  return (\n    <Stack sx={{flexDirection: {sx: 'column',md: 'row'}}}>\n      <SideBar selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\n      <Box p={2} sx={{overflowY: 'auto', height: '90vh', flex: 2}}>\n        <Typography variant='h4' fontWeight='bold' mb={2} sx={{color: 'white'}}>\n          {selectedCategory} <span style={{color: '#F31503'}}>videos</span>\n        </Typography>\n        <Videos videos = {videos}/>\n      </Box>\n    </Stack>\n  )\n}\n\nexport default Feed"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,SAAQC,KAAK,EAAEC,GAAG,EAAEC,UAAU,QAAO,eAAe;AACpD,SAAQC,OAAO,EAAEC,MAAM,QAAO,IAAI;AAClC,SAAQC,YAAY,QAAO,uBAAuB;AAAC;AAGnD,MAAMC,IAAI,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,gBAAgB,EAACC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC9D,MAAM,CAACW,MAAM,EAACC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACvCC,SAAS,CAAC,MAAI;IACZM,YAAY,CAAE,yBAAwBE,gBAAiB,EAAC,CAAC,CACtDI,IAAI,CAAEC,IAAI,IAAKF,SAAS,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC;EAC1C,CAAC,EAAC,CAACN,gBAAgB,CAAC,CAAC;EACrB,oBACE,QAAC,KAAK;IAAC,EAAE,EAAE;MAACO,aAAa,EAAE;QAACC,EAAE,EAAE,QAAQ;QAACC,EAAE,EAAE;MAAK;IAAC,CAAE;IAAA,wBACnD,QAAC,OAAO;MAAC,gBAAgB,EAAET,gBAAiB;MAAC,mBAAmB,EAAEC;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAG,eACzF,QAAC,GAAG;MAAC,CAAC,EAAE,CAAE;MAAC,EAAE,EAAE;QAACS,SAAS,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAC,CAAE;MAAA,wBAC1D,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,UAAU,EAAC,MAAM;QAAC,EAAE,EAAE,CAAE;QAAC,EAAE,EAAE;UAACC,KAAK,EAAE;QAAO,CAAE;QAAA,WACpEb,gBAAgB,oBAAE;UAAM,KAAK,EAAE;YAACa,KAAK,EAAE;UAAS,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA;QAAA;QAAA;QAAA;MAAA,QACtD,eACb,QAAC,MAAM;QAAC,MAAM,EAAIX;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ,CAAC;AAAA,GAlBKH,IAAI;AAAA,KAAJA,IAAI;AAoBV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}